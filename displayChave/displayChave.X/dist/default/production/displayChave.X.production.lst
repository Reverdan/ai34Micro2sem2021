

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 18 21:47:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 02/02/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0092                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0092                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009F                     	;# 
   122                           
   123                           	psect	idataBANK0
   124  0762                     __pidataBANK0:
   125                           
   126                           ;initializer for _display
   127  0762  34EE               	retlw	238
   128  0763  3400               	retlw	0
   129  0764  3428               	retlw	40
   130  0765  3400               	retlw	0
   131  0766  34CD               	retlw	205
   132  0767  3400               	retlw	0
   133  0768  346D               	retlw	109
   134  0769  3400               	retlw	0
   135  076A  342B               	retlw	43
   136  076B  3400               	retlw	0
   137  076C  3467               	retlw	103
   138  076D  3400               	retlw	0
   139  076E  34E7               	retlw	231
   140  076F  3400               	retlw	0
   141  0770  342C               	retlw	44
   142  0771  3400               	retlw	0
   143  0772  34EF               	retlw	239
   144  0773  3400               	retlw	0
   145  0774  346F               	retlw	111
   146  0775  3400               	retlw	0
   147  0005                     _PORTAbits	set	5
   148  0006                     _PORTB	set	6
   149  0086                     _TRISB	set	134
   150                           
   151                           	psect	cinit
   152  07D6                     start_initialization:	
   153                           ; #config settings
   154                           
   155  07D6                     __initialization:
   156                           
   157                           ; Initialize objects allocated to BANK0
   158  07D6  2762               	fcall	__pidataBANK0	;fetch initializer
   159  07D7  00A0               	movwf	__pdataBANK0& (0+127)
   160  07D8  2763               	fcall	__pidataBANK0+1	;fetch initializer
   161  07D9  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   162  07DA  2764               	fcall	__pidataBANK0+2	;fetch initializer
   163  07DB  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   164  07DC  2765               	fcall	__pidataBANK0+3	;fetch initializer
   165  07DD  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   166  07DE  2766               	fcall	__pidataBANK0+4	;fetch initializer
   167  07DF  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   168  07E0  2767               	fcall	__pidataBANK0+5	;fetch initializer
   169  07E1  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   170  07E2  2768               	fcall	__pidataBANK0+6	;fetch initializer
   171  07E3  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   172  07E4  2769               	fcall	__pidataBANK0+7	;fetch initializer
   173  07E5  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   174  07E6  276A               	fcall	__pidataBANK0+8	;fetch initializer
   175  07E7  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   176  07E8  276B               	fcall	__pidataBANK0+9	;fetch initializer
   177  07E9  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   178  07EA  276C               	fcall	__pidataBANK0+10	;fetch initializer
   179  07EB  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   180  07EC  276D               	fcall	__pidataBANK0+11	;fetch initializer
   181  07ED  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   182  07EE  276E               	fcall	__pidataBANK0+12	;fetch initializer
   183  07EF  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   184  07F0  276F               	fcall	__pidataBANK0+13	;fetch initializer
   185  07F1  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   186  07F2  2770               	fcall	__pidataBANK0+14	;fetch initializer
   187  07F3  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   188  07F4  2771               	fcall	__pidataBANK0+15	;fetch initializer
   189  07F5  00AF               	movwf	(__pdataBANK0+15)& (0+127)
   190  07F6  2772               	fcall	__pidataBANK0+16	;fetch initializer
   191  07F7  00B0               	movwf	(__pdataBANK0+16)& (0+127)
   192  07F8  2773               	fcall	__pidataBANK0+17	;fetch initializer
   193  07F9  00B1               	movwf	(__pdataBANK0+17)& (0+127)
   194  07FA  2774               	fcall	__pidataBANK0+18	;fetch initializer
   195  07FB  00B2               	movwf	(__pdataBANK0+18)& (0+127)
   196  07FC  2775               	fcall	__pidataBANK0+19	;fetch initializer
   197  07FD  00B3               	movwf	(__pdataBANK0+19)& (0+127)
   198  07FE                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201  07FE                     __end_of__initialization:
   202  07FE  0183               	clrf	3
   203  07FF  2F76               	ljmp	_main	;jump to C main() function
   204                           
   205                           	psect	dataBANK0
   206  0020                     __pdataBANK0:
   207  0020                     _display:
   208  0020                     	ds	20
   209                           
   210                           	psect	cstackCOMMON
   211  0070                     __pcstackCOMMON:
   212  0070                     ?_configuracao:
   213  0070                     ??_configuracao:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_main:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ??_main:	
   220                           ; 1 bytes @ 0x0
   221                           
   222                           
   223                           ; 1 bytes @ 0x0
   224  0070                     	ds	3
   225  0073                     main@valor:
   226                           
   227                           ; 2 bytes @ 0x3
   228  0073                     	ds	2
   229                           
   230                           	psect	maintext
   231  0776                     __pmaintext:	
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 26 in file "displayChave.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;  valor           2    3[COMMON] unsigned int 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   251 ;;      Params:         0       0       0       0
   252 ;;      Locals:         2       0       0       0
   253 ;;      Temps:          3       0       0       0
   254 ;;      Totals:         5       0       0       0
   255 ;;Total ram usage:        5 bytes
   256 ;; Hardware stack levels required when called: 1
   257 ;; This function calls:
   258 ;;		_configuracao
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           
   265                           ;psect for function _main
   266  0776                     _main:
   267  0776                     l624:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   270                           
   271                           
   272                           ;displayChave.c: 28:     configuracao();
   273  0776  275B               	fcall	_configuracao
   274  0777                     l626:
   275                           
   276                           ;displayChave.c: 29:     unsigned int valor = 0;
   277  0777  01F3               	clrf	main@valor
   278  0778  01F4               	clrf	main@valor+1
   279  0779                     l628:
   280                           
   281                           ;displayChave.c: 31:     {;displayChave.c: 32:         if (!PORTAbits.RA2)
   282  0779  1283               	bcf	3,5	;RP0=0, select bank0
   283  077A  1303               	bcf	3,6	;RP1=0, select bank0
   284  077B  1905               	btfsc	5,2	;volatile
   285  077C  2F7E               	goto	u11
   286  077D  2F7F               	goto	u10
   287  077E                     u11:
   288  077E  2FA3               	goto	l640
   289  077F                     u10:
   290  077F  2F8C               	goto	l634
   291  0780                     l632:
   292  0780  3002               	movlw	2
   293  0781  00F2               	movwf	??_main+2
   294  0782  3086               	movlw	134
   295  0783  00F1               	movwf	??_main+1
   296  0784  3099               	movlw	153
   297  0785  00F0               	movwf	??_main
   298  0786                     u77:
   299  0786  0BF0               	decfsz	??_main,f
   300  0787  2F86               	goto	u77
   301  0788  0BF1               	decfsz	??_main+1,f
   302  0789  2F86               	goto	u77
   303  078A  0BF2               	decfsz	??_main+2,f
   304  078B  2F86               	goto	u77
   305  078C                     l634:
   306  078C  1283               	bcf	3,5	;RP0=0, select bank0
   307  078D  1303               	bcf	3,6	;RP1=0, select bank0
   308  078E  1D05               	btfss	5,2	;volatile
   309  078F  2F91               	goto	u21
   310  0790  2F92               	goto	u20
   311  0791                     u21:
   312  0791  2F80               	goto	l632
   313  0792                     u20:
   314  0792                     l636:
   315                           
   316                           ;displayChave.c: 35:             valor++;
   317  0792  3001               	movlw	1
   318  0793  07F3               	addwf	main@valor,f
   319  0794  1803               	skipnc
   320  0795  0AF4               	incf	main@valor+1,f
   321  0796  3000               	movlw	0
   322  0797  07F4               	addwf	main@valor+1,f
   323                           
   324                           ;displayChave.c: 36:             if (valor > 9)
   325  0798  3000               	movlw	0
   326  0799  0274               	subwf	main@valor+1,w
   327  079A  300A               	movlw	10
   328  079B  1903               	skipnz
   329  079C  0273               	subwf	main@valor,w
   330  079D  1C03               	skipc
   331  079E  2FA0               	goto	u31
   332  079F  2FA1               	goto	u30
   333  07A0                     u31:
   334  07A0  2FA3               	goto	l640
   335  07A1                     u30:
   336  07A1                     l638:
   337                           
   338                           ;displayChave.c: 37:                 valor = 0;
   339  07A1  01F3               	clrf	main@valor
   340  07A2  01F4               	clrf	main@valor+1
   341  07A3                     l640:
   342                           
   343                           ;displayChave.c: 39:         if (!PORTAbits.RA1)
   344  07A3  1885               	btfsc	5,1	;volatile
   345  07A4  2FA6               	goto	u41
   346  07A5  2FA7               	goto	u40
   347  07A6                     u41:
   348  07A6  2FCC               	goto	l654
   349  07A7                     u40:
   350  07A7  2FB4               	goto	l646
   351  07A8                     l644:
   352  07A8  3002               	movlw	2
   353  07A9  00F2               	movwf	??_main+2
   354  07AA  3086               	movlw	134
   355  07AB  00F1               	movwf	??_main+1
   356  07AC  3099               	movlw	153
   357  07AD  00F0               	movwf	??_main
   358  07AE                     u87:
   359  07AE  0BF0               	decfsz	??_main,f
   360  07AF  2FAE               	goto	u87
   361  07B0  0BF1               	decfsz	??_main+1,f
   362  07B1  2FAE               	goto	u87
   363  07B2  0BF2               	decfsz	??_main+2,f
   364  07B3  2FAE               	goto	u87
   365  07B4                     l646:
   366  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   367  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   368  07B6  1C85               	btfss	5,1	;volatile
   369  07B7  2FB9               	goto	u51
   370  07B8  2FBA               	goto	u50
   371  07B9                     u51:
   372  07B9  2FA8               	goto	l644
   373  07BA                     u50:
   374  07BA                     l648:
   375                           
   376                           ;displayChave.c: 42:             valor--;
   377  07BA  3001               	movlw	1
   378  07BB  02F3               	subwf	main@valor,f
   379  07BC  3000               	movlw	0
   380  07BD  1C03               	skipc
   381  07BE  03F4               	decf	main@valor+1,f
   382  07BF  02F4               	subwf	main@valor+1,f
   383  07C0                     l650:
   384                           
   385                           ;displayChave.c: 43:             if (valor == 65535)
   386  07C0  0A73               	incf	main@valor,w
   387  07C1  1D03               	skipz
   388  07C2  2FC7               	goto	u61
   389  07C3  0A74               	incf	main@valor+1,w
   390  07C4  1D03               	btfss	3,2
   391  07C5  2FC7               	goto	u61
   392  07C6  2FC8               	goto	u60
   393  07C7                     u61:
   394  07C7  2FCC               	goto	l654
   395  07C8                     u60:
   396  07C8                     l652:
   397                           
   398                           ;displayChave.c: 44:                 valor = 9;
   399  07C8  3009               	movlw	9
   400  07C9  00F3               	movwf	main@valor
   401  07CA  3000               	movlw	0
   402  07CB  00F4               	movwf	main@valor+1
   403  07CC                     l654:
   404                           
   405                           ;displayChave.c: 46:         PORTB = display[valor];
   406  07CC  0873               	movf	main@valor,w
   407  07CD  00F0               	movwf	??_main
   408  07CE  0770               	addwf	??_main,w
   409  07CF  3E20               	addlw	(low (_display| 0))& (0+255)
   410  07D0  0084               	movwf	4
   411  07D1  1383               	bcf	3,7	;select IRP bank0
   412  07D2  0800               	movf	0,w
   413  07D3  0086               	movwf	6	;volatile
   414                           
   415                           ;displayChave.c: 47:     }
   416  07D4  2F79               	goto	l628
   417  07D5  2800               	ljmp	start
   418  07D6                     __end_of_main:
   419                           
   420                           	psect	text1
   421  075B                     __ptext1:	
   422 ;; *************** function _configuracao *****************
   423 ;; Defined at:
   424 ;;		line 20 in file "displayChave.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		status,2
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   438 ;;      Params:         0       0       0       0
   439 ;;      Locals:         0       0       0       0
   440 ;;      Temps:          0       0       0       0
   441 ;;      Totals:         0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _configuracao
   453  075B                     _configuracao:
   454  075B                     l622:	
   455                           ;incstack = 0
   456                           ; Regs used in _configuracao: [status,2]
   457                           
   458                           
   459                           ;displayChave.c: 22:     TRISB = 0x00;
   460  075B  1683               	bsf	3,5	;RP0=1, select bank1
   461  075C  1303               	bcf	3,6	;RP1=0, select bank1
   462  075D  0186               	clrf	6	;volatile
   463                           
   464                           ;displayChave.c: 23:     PORTB = 0x00;
   465  075E  1283               	bcf	3,5	;RP0=0, select bank0
   466  075F  1303               	bcf	3,6	;RP1=0, select bank0
   467  0760  0186               	clrf	6	;volatile
   468  0761                     l13:
   469  0761  0008               	return
   470  0762                     __end_of_configuracao:
   471  007E                     btemp	set	126	;btemp
   472  007E                     wtemp0	set	126
   473                           
   474                           	psect	config
   475                           
   476                           ;Config register CONFIG @ 0x2007
   477                           ;	Oscillator Selection bits
   478                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   479                           ;	Watchdog Timer Enable bit
   480                           ;	WDTE = OFF, WDT disabled
   481                           ;	Power-up Timer Enable bit
   482                           ;	PWRTE = OFF, PWRT disabled
   483                           ;	RA5/MCLR/VPP Pin Function Select bit
   484                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   485                           ;	Brown-out Detect Enable bit
   486                           ;	BOREN = OFF, BOD disabled
   487                           ;	Low-Voltage Programming Enable bit
   488                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   489                           ;	Data EE Memory Code Protection bit
   490                           ;	CPD = OFF, Data memory code protection off
   491                           ;	Flash Program Memory Code Protection bit
   492                           ;	CP = OFF, Code protection off
   493  2007                     	org	8199
   494  2007  3F2A               	dw	16170

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0      20
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      45
                                              0 COMMON     5     5      0
                       _configuracao
 ---------------------------------------------------------------------------------
 (1) _configuracao                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuracao

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       3       25.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      10        0.0%
ABS                  0      0      19       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 18 21:47:51 2021

          ?_configuracao 0070                       l13 0761                       u10 077F  
                     u11 077E                       u20 0792                       u21 0791  
                     u30 07A1                       u31 07A0                       u40 07A7  
                     u41 07A6                       u50 07BA                       u51 07B9  
                     u60 07C8                       u61 07C7                       u77 0786  
                     u87 07AE                      l622 075B                      l632 0780  
                    l640 07A3                      l624 0776                      l650 07C0  
                    l634 078C                      l626 0777                      l652 07C8  
                    l644 07A8                      l636 0792                      l628 0779  
                    l646 07B4                      l654 07CC                      l638 07A1  
                    l648 07BA                      fsr0 0004                      indf 0000  
                   _main 0776                     btemp 007E                     start 0000  
         ??_configuracao 0070                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 07D6             __end_of_main 07D6                   ??_main 0070  
   __end_of_configuracao 0762  __end_of__initialization 07FE           __pcstackCOMMON 0070  
           __pidataBANK0 0762               __pmaintext 0776                  __ptext1 075B  
                _display 0020    __size_of_configuracao 0007     end_of_initialization 07FE  
           _configuracao 075B                _PORTAbits 0005      start_initialization 07D6  
            __pdataBANK0 0020                ___latbits 0000                main@valor 0073  
          __size_of_main 0060  
