

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 18 20:20:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 02/02/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0092                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0092                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009F                     	;# 
   122                           
   123                           	psect	idataBANK0
   124  0793                     __pidataBANK0:
   125                           
   126                           ;initializer for _display
   127  0793  34EE               	retlw	238
   128  0794  3400               	retlw	0
   129  0795  3428               	retlw	40
   130  0796  3400               	retlw	0
   131  0797  34CD               	retlw	205
   132  0798  3400               	retlw	0
   133  0799  346D               	retlw	109
   134  079A  3400               	retlw	0
   135  079B  342B               	retlw	43
   136  079C  3400               	retlw	0
   137  079D  3467               	retlw	103
   138  079E  3400               	retlw	0
   139  079F  34E7               	retlw	231
   140  07A0  3400               	retlw	0
   141  07A1  342C               	retlw	44
   142  07A2  3400               	retlw	0
   143  07A3  34EF               	retlw	239
   144  07A4  3400               	retlw	0
   145  07A5  346F               	retlw	111
   146  07A6  3400               	retlw	0
   147  0006                     _PORTB	set	6
   148  0086                     _TRISB	set	134
   149                           
   150                           	psect	cinit
   151  07D6                     start_initialization:	
   152                           ; #config settings
   153                           
   154  07D6                     __initialization:
   155                           
   156                           ; Initialize objects allocated to BANK0
   157  07D6  2793               	fcall	__pidataBANK0	;fetch initializer
   158  07D7  00A0               	movwf	__pdataBANK0& (0+127)
   159  07D8  2794               	fcall	__pidataBANK0+1	;fetch initializer
   160  07D9  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   161  07DA  2795               	fcall	__pidataBANK0+2	;fetch initializer
   162  07DB  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   163  07DC  2796               	fcall	__pidataBANK0+3	;fetch initializer
   164  07DD  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   165  07DE  2797               	fcall	__pidataBANK0+4	;fetch initializer
   166  07DF  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   167  07E0  2798               	fcall	__pidataBANK0+5	;fetch initializer
   168  07E1  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   169  07E2  2799               	fcall	__pidataBANK0+6	;fetch initializer
   170  07E3  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   171  07E4  279A               	fcall	__pidataBANK0+7	;fetch initializer
   172  07E5  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   173  07E6  279B               	fcall	__pidataBANK0+8	;fetch initializer
   174  07E7  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   175  07E8  279C               	fcall	__pidataBANK0+9	;fetch initializer
   176  07E9  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   177  07EA  279D               	fcall	__pidataBANK0+10	;fetch initializer
   178  07EB  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   179  07EC  279E               	fcall	__pidataBANK0+11	;fetch initializer
   180  07ED  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   181  07EE  279F               	fcall	__pidataBANK0+12	;fetch initializer
   182  07EF  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   183  07F0  27A0               	fcall	__pidataBANK0+13	;fetch initializer
   184  07F1  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   185  07F2  27A1               	fcall	__pidataBANK0+14	;fetch initializer
   186  07F3  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   187  07F4  27A2               	fcall	__pidataBANK0+15	;fetch initializer
   188  07F5  00AF               	movwf	(__pdataBANK0+15)& (0+127)
   189  07F6  27A3               	fcall	__pidataBANK0+16	;fetch initializer
   190  07F7  00B0               	movwf	(__pdataBANK0+16)& (0+127)
   191  07F8  27A4               	fcall	__pidataBANK0+17	;fetch initializer
   192  07F9  00B1               	movwf	(__pdataBANK0+17)& (0+127)
   193  07FA  27A5               	fcall	__pidataBANK0+18	;fetch initializer
   194  07FB  00B2               	movwf	(__pdataBANK0+18)& (0+127)
   195  07FC  27A6               	fcall	__pidataBANK0+19	;fetch initializer
   196  07FD  00B3               	movwf	(__pdataBANK0+19)& (0+127)
   197  07FE                     end_of_initialization:	
   198                           ;End of C runtime variable initialization code
   199                           
   200  07FE                     __end_of__initialization:
   201  07FE  0183               	clrf	3
   202  07FF  2FA7               	ljmp	_main	;jump to C main() function
   203                           
   204                           	psect	dataBANK0
   205  0020                     __pdataBANK0:
   206  0020                     _display:
   207  0020                     	ds	20
   208                           
   209                           	psect	cstackCOMMON
   210  0070                     __pcstackCOMMON:
   211  0070                     ?_configuracao:
   212  0070                     ??_configuracao:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ??_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223  0070                     	ds	3
   224  0073                     main@i:
   225                           
   226                           ; 2 bytes @ 0x3
   227  0073                     	ds	2
   228                           
   229                           	psect	maintext
   230  07A7                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 23 in file "display.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;  i               2    3[COMMON] int 
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   250 ;;      Params:         0       0       0       0
   251 ;;      Locals:         2       0       0       0
   252 ;;      Temps:          3       0       0       0
   253 ;;      Totals:         5       0       0       0
   254 ;;Total ram usage:        5 bytes
   255 ;; Hardware stack levels required when called: 1
   256 ;; This function calls:
   257 ;;		_configuracao
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           
   264                           ;psect for function _main
   265  07A7                     _main:
   266  07A7                     l614:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   269                           
   270                           
   271                           ;display.c: 25:     configuracao();
   272  07A7  278C               	fcall	_configuracao
   273  07A8                     l616:
   274                           
   275                           ;display.c: 27:     {;display.c: 28:         for (int i = 0; i < 10; i++)
   276  07A8  01F3               	clrf	main@i
   277  07A9  01F4               	clrf	main@i+1
   278  07AA                     l622:
   279                           
   280                           ;display.c: 29:         {;display.c: 30:             PORTB = display[i];
   281  07AA  0873               	movf	main@i,w
   282  07AB  00F0               	movwf	??_main
   283  07AC  0770               	addwf	??_main,w
   284  07AD  3E20               	addlw	(low (_display| 0))& (0+255)
   285  07AE  0084               	movwf	4
   286  07AF  1383               	bcf	3,7	;select IRP bank0
   287  07B0  0800               	movf	0,w
   288  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   289  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   290  07B3  0086               	movwf	6	;volatile
   291  07B4                     l624:
   292                           
   293                           ;display.c: 31:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   294  07B4  3006               	movlw	6
   295  07B5  00F2               	movwf	??_main+2
   296  07B6  3013               	movlw	19
   297  07B7  00F1               	movwf	??_main+1
   298  07B8  30AD               	movlw	173
   299  07B9  00F0               	movwf	??_main
   300  07BA                     u27:
   301  07BA  0BF0               	decfsz	??_main,f
   302  07BB  2FBA               	goto	u27
   303  07BC  0BF1               	decfsz	??_main+1,f
   304  07BD  2FBA               	goto	u27
   305  07BE  0BF2               	decfsz	??_main+2,f
   306  07BF  2FBA               	goto	u27
   307  07C0  2FC1               	nop2
   308  07C1                     l626:
   309                           
   310                           ;display.c: 32:         }
   311  07C1  3001               	movlw	1
   312  07C2  07F3               	addwf	main@i,f
   313  07C3  1803               	skipnc
   314  07C4  0AF4               	incf	main@i+1,f
   315  07C5  3000               	movlw	0
   316  07C6  07F4               	addwf	main@i+1,f
   317  07C7                     l628:
   318  07C7  0874               	movf	main@i+1,w
   319  07C8  3A80               	xorlw	128
   320  07C9  00FF               	movwf	btemp+1
   321  07CA  3080               	movlw	128
   322  07CB  027F               	subwf	btemp+1,w
   323  07CC  1D03               	skipz
   324  07CD  2FD0               	goto	u15
   325  07CE  300A               	movlw	10
   326  07CF  0273               	subwf	main@i,w
   327  07D0                     u15:
   328  07D0  1C03               	skipc
   329  07D1  2FD3               	goto	u11
   330  07D2  2FD4               	goto	u10
   331  07D3                     u11:
   332  07D3  2FAA               	goto	l622
   333  07D4                     u10:
   334  07D4  2FA8               	goto	l616
   335  07D5  2800               	ljmp	start
   336  07D6                     __end_of_main:
   337                           
   338                           	psect	text1
   339  078C                     __ptext1:	
   340 ;; *************** function _configuracao *****************
   341 ;; Defined at:
   342 ;;		line 17 in file "display.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		status,2
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   356 ;;      Params:         0       0       0       0
   357 ;;      Locals:         0       0       0       0
   358 ;;      Temps:          0       0       0       0
   359 ;;      Totals:         0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _configuracao
   371  078C                     _configuracao:
   372  078C                     l612:	
   373                           ;incstack = 0
   374                           ; Regs used in _configuracao: [status,2]
   375                           
   376                           
   377                           ;display.c: 19:     TRISB = 0x00;
   378  078C  1683               	bsf	3,5	;RP0=1, select bank1
   379  078D  1303               	bcf	3,6	;RP1=0, select bank1
   380  078E  0186               	clrf	6	;volatile
   381                           
   382                           ;display.c: 20:     PORTB = 0x00;
   383  078F  1283               	bcf	3,5	;RP0=0, select bank0
   384  0790  1303               	bcf	3,6	;RP1=0, select bank0
   385  0791  0186               	clrf	6	;volatile
   386  0792                     l11:
   387  0792  0008               	return
   388  0793                     __end_of_configuracao:
   389  007E                     btemp	set	126	;btemp
   390  007E                     wtemp0	set	126
   391                           
   392                           	psect	config
   393                           
   394                           ;Config register CONFIG @ 0x2007
   395                           ;	Oscillator Selection bits
   396                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   397                           ;	Watchdog Timer Enable bit
   398                           ;	WDTE = OFF, WDT disabled
   399                           ;	Power-up Timer Enable bit
   400                           ;	PWRTE = OFF, PWRT disabled
   401                           ;	RA5/MCLR/VPP Pin Function Select bit
   402                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   403                           ;	Brown-out Detect Enable bit
   404                           ;	BOREN = OFF, BOD disabled
   405                           ;	Low-Voltage Programming Enable bit
   406                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   407                           ;	Data EE Memory Code Protection bit
   408                           ;	CPD = OFF, Data memory code protection off
   409                           ;	Flash Program Memory Code Protection bit
   410                           ;	CP = OFF, Code protection off
   411  2007                     	org	8199
   412  2007  3F2A               	dw	16170

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0      20
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      45
                                              0 COMMON     5     5      0
                       _configuracao
 ---------------------------------------------------------------------------------
 (1) _configuracao                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuracao

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       3       25.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      10        0.0%
ABS                  0      0      19       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 18 20:20:39 2021

          ?_configuracao 0070                       l11 0792                       u10 07D4  
                     u11 07D3                       u15 07D0                       u27 07BA  
                    l612 078C                      l622 07AA                      l614 07A7  
                    l624 07B4                      l616 07A8                      l626 07C1  
                    l628 07C7                      fsr0 0004                      indf 0000  
                   _main 07A7                     btemp 007E                     start 0000  
         ??_configuracao 0070                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    main@i 0073                    status 0003  
                  wtemp0 007E          __initialization 07D6             __end_of_main 07D6  
                 ??_main 0070     __end_of_configuracao 0793  __end_of__initialization 07FE  
         __pcstackCOMMON 0070             __pidataBANK0 0793               __pmaintext 07A7  
                __ptext1 078C                  _display 0020    __size_of_configuracao 0007  
   end_of_initialization 07FE             _configuracao 078C      start_initialization 07D6  
            __pdataBANK0 0020                ___latbits 0000            __size_of_main 002F  
